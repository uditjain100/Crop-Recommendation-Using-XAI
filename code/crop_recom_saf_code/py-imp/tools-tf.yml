# Install on Linux (prerequisites: wget)
# # Oneliner
# cd ~ ; mkdir -p "Downloads"; cd ~/Downloads ; wget "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh" --show-progress; bash Miniforge3-$(uname)-$(uname -m).sh

# Install on Windows (prerequisites: wget)
# # Oneliner
# cd %userprofile%\Downloads && wget --show-progress -O "Mambaforge-Windows-x86_64.exe" https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Windows-x86_64.exe && start /wait "" Mambaforge-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=1 /AddToPath=1 /S /D=%UserProfile%\Mambaforge

## Run in cmd/terminal to setup:
#Base environment setup ONLY
#conda config --set report_errors false
#conda --no-plugins
#conda env update --name base --file tools.yml
#mamba install -c conda-forge --name base conda-lock --yes
# OR
#conda env update --file tools.yml
#mamba install -c conda-forge conda-lock --yes

##After everything (to clear caches etc)
#mamba clean -aflvy

##Remove env
#mamba remove -n <env_name> --all --no-pin -k -y
#poetry cache clear pypi --all

## cd %userprofile%\AppData\Roaming && rm -fr "Python" && rm -fr "jupyter" && rm -fr "conda" && rm -fr "PyPy" && rm -fr "pip" && cd %userprofile%\AppData\Local && rm -fr "Python" && rm -fr "jupyter" && rm -fr "conda" && rm -fr "PyPy" && rm -fr "pip" && cd %userprofile%\AppData\LocalLow && rm -fr "Python" && rm -fr "jupyter" && rm -fr "conda" && rm -fr "PyPy" && rm -fr "pip" && cd %userprofile% && rm -fr ".jupyter" && rm -fr ".ipython" && rm -fr ".conda" && rm -fr ".keras" && rm -fr ".ipynb_checkpoints" && rm -fr ".matplotlib" && cd %ProgramData% && rm -fr "jupyter" && cd %userprofile%\AppData\Local\Programs && rm -fr "Python" && cd %userprofile%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs && rm -fr "Miniforge3" "Anaconda3 (64-bit)"

## Linux
## cd ~/ && rm -fr ".jupyter" && rm -fr ".ipython" && rm -fr ".conda" && rm -fr ".keras" && rm -fr ".ipynb_checkpoints" && rm -fr ".matplotlib"

# Pip freeze-ish for conda (ONLY INSTALL IN BASE)
# mamba install conda-tree -n base -c conda-forge --yes --force-reinstall --insecure

# Export environment
# Windows
# conda env export --no-builds | findstr -v "prefix" > environment_tensorflow_gpu_python3_8.yml
# Linux
# conda env export --no-builds | grep -v "prefix" > environment_tensorflow_gpu_python3_8.yml

# Windows bare bones tensorflow-gpu
# conda env export --no-builds | findstr -v "prefix" > only_tensorflow_gpu_python3_8.yml

# Recreate
# mamba env create --name project_n --file environment_tensorflow_gpu_python3_8.yml

#Conda-lock file (Windows)
# conda-lock lock --mamba --kind lock --strip-auth --no-dev-dependencies --platform win-64 -f environment_tensorflow_gpu_python3_8.yml --lockfile tensorflow_gpu_python3_8.conda-lock.yml

# Recreate
# conda-lock --mamba install --name <env> <lockfile_filename>.conda-lock.yml

# For pip users
# pip-chill --no-chill > requirements_tensorflow_gpu_python3_8.txt
# Recreate
# python -m venv venv; source venv/Scripts/activate && which python; python -m pip install --upgrade pip
# pip install -r requirements_tensorflow_gpu_python3_8.txt

# pip list --format=freeze > requirements_tensorflow_gpu_python3_8.txt
# Recreate
# python -m venv venv; source venv/Scripts/activate && which python; python -m pip install --upgrade pip
# pip install -r requirements_tensorflow_gpu_python3_8.txt

channels:
    - conda-forge
    - defaults

dependencies:
    - python=3.8.*
    - mamba=1.5.*
    - pip=23.2.*
    # - conda-lock=2.3.*
    - poetry=1.6.*
    # - conda
    - ipykernel=6.25.*
    - ipython=8.12.*
    - jupyterlab=4.0.*
    - jupyter=1.0.*
    # - from defaults
    - shortcutter=0.1.*
    - console_shortcut=0.1.*
    # - end from defaults
    - cudatoolkit=11.2.*
    # - cudnn=8.1.*
    - graphviz=8.1.*
    - python-graphviz=0.20.*
    - lttbc=0.2.*